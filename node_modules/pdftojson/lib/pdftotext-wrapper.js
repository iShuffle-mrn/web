/*
Note: This tool uses exec, which is vulnerable to shell injection.
Please make sure it is not exposed to the public!
*/

'use strict';

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = pdftotext;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _child_process = require('child_process');

var _tmp = require('tmp');

var _tmp2 = _interopRequireDefault(_tmp);

var TAG = 'pdftotext',
    debug = require('debug')(TAG);

function pdftotext(fileName) {
  var cmd = arguments[1] === undefined ? '' : arguments[1];

  return new _Promise(function (resolve, reject) {
    var tmpObj = _tmp2['default'].fileSync(),
        childProcess = (0, _child_process.exec)('pdftotext -bbox ' + cmd + ' "' + fileName + '" ' + tmpObj.name, function (err, stdout) {
      if (err) {
        reject(err);return;
      }

      resolve(_fs2['default'].readFileSync(tmpObj.name, { encoding: 'utf8' }));
      tmpObj.removeCallback();
    });

    childProcess.stderr.on('data', function (data) {
      console.error(TAG, data);
    });
  });
}

module.exports = exports['default'];